import * as cdk from 'aws-cdk-lib';
import { Template, Match } from 'aws-cdk-lib/assertions';
import { SnsEventbridgeSqsStack } from '../lib/sns-eventbridge-sqs-stack';

describe('SnsEventbridgeSqsStack', () => {
  let template: Template;

  beforeAll(() => {
    const app = new cdk.App();
    const stack = new SnsEventbridgeSqsStack(app, 'TestStack');
    template = Template.fromStack(stack);
  });

  test('Intermediate SQS FIFO queue is created (SNS â†’ Lambda)', () => {
    template.hasResourceProperties('AWS::SQS::Queue', {
      QueueName: 'sns-to-lambda-queue.fifo',
      FifoQueue: true,
    });
  });

  test('Custom EventBus is created', () => {
    template.hasResourceProperties('AWS::Events::EventBus', {
      Name: 'CustomJsonTransformBus',
    });
  });

  test('Lambda is created with EventBus environment variable', () => {
    template.hasResourceProperties('AWS::Lambda::Function', {
      Runtime: 'nodejs22.x',
      Environment: {
        Variables: {
          EVENT_BUS_NAME: Match.anyValue(), // we just check existence
        },
      },
    });
  });

  test('EventBridge Rule is created with FIFO target', () => {
    template.hasResourceProperties('AWS::Events::Rule', {
      Name: 'JsonTransformAndForward',
      EventPattern: {
        source: ['custom.sns.source'],
        detail: {
          payload: {
            eventType: ['evMetadatgaCApture'],
          },
        },
      },
      Targets: Match.arrayWith([
        Match.objectLike({
          SqsParameters: {
            MessageGroupId: '$.detail.fifoMetadata.messageGroupId',
          },
        }),
      ]),
    });
  });

  test('Debug SQS FIFO queue is created', () => {
    template.hasResourceProperties('AWS::SQS::Queue', {
      QueueName: 'debug-destination-queue.fifo',
      FifoQueue: true,
    });
  });
});

